{"version":3,"sources":["ReactKnobFn.js","index.js"],"names":["ReactKnob","props","knobAngle","useState","mouseX_st","setmouseX_st","mouseY_st","setMouseY_st","lastX","lastY","isDragging","thisReactNodeRef","useRef","canvasA_REF","thisReactNode","setThisReactNode","canvasA","canvasWidthHeight","setCanvasWidthHeight","freezeScroll","trueOnfalseOff","document","body","style","overflow","useEffect","current","console","log","window","addEventListener","mevent","evt","theNode","x","y","preventDefault","mouseX","offsetLeft","mouseY","offsetTop","scrollY","toFixed","Math","abs","doMoveTouchOrMouse","clientX","clientY","mouseEvt","location","reload","borderWidth","parseFloat","parentNode","clientWidth","width","height","drawContextA","getContext","clearRect","center","lineWidth","lineWidthPct","radius","dx","dy","graphicsAngle","atan","PI","strokeStyle","beginPath","moveTo","ratio","pow","lineTo","stroke","color","topDeadCenter","arc","drawCanvas","ref","id","border","position","display","gridTemplateColumns","TestReactKnobInGrid","fontSize","gridColumn","textAlign","paddingRight","onClick","React","Component","RouterForMultiPages","path","to","ShowLoc","backgroundColor","onMouseEnter","event","currentTarget","onMouseLeave","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bcab7ae6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// this is only for class components....   import * as ReactDOM from 'react-dom'; \n\n// ---------- START snip to copy into react code -----------------------\n// for react project using package.json .....    import React from 'react';\n// for react project using package.json .....    import * as ReactDOM from 'react-dom'; \n// for codepen.io project .... import * as React from \"https://cdn.skypack.dev/react@17.0.1\";\n// for codepen.io project .... import * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n\nconst LABEL = \"tues 2\"\nconst MOUSEMOVETHRESHOLD = 10; \n// SEE EXPLANATION AT END HOW  CODEPEN IMPORTS NPM PACKAGES. PACKAGE.JSON IS NOT USED.\nfunction ReactKnob( props ) {\n  // these persist between renders:\n  var graphicsAngle = 0; var knobAngle = 0;\n  var mouseX_stdisp=0; var mouseYdisp=0;\n  var [mouseX_st, setmouseX_st] = useState(0); // do this so it re-renders when moved\n  var [mouseY_st, setMouseY_st] = useState(0);\n  var lastX=12345; var lastY=0; // dont make state because we dont want to redraw every time mouse moves a little \n  var isDragging=false; \n\n  /* React function component has advantage over class component because it lets you access dom \n   * components easily [search for \"thisReactNodeRef\" to see how it works]\n   * The ambiguously named \"useEffect\" is the main lifecycle method of function components. \n   * It invokes custom code when component renders, conditionally according to second array arg:\n   * + missing: run every time. Good for getting dimensions of window etc\n   * + [] empty: run only once when component mounts like componentDidMount\n   * + [aa, bb]: do only when aa or bb changes\n   * + [] empty and returns function: runs when component unmounts\n   */\n  const thisReactNodeRef = useRef();\n  const canvasA_REF = useRef();\n  var [thisReactNode, setThisReactNode] = useState(0); // if not state, needs to be recalculated every time\n  // var [canvasA, setCanvasA] = useState(0);\n  var canvasA = useRef(); // useRef let it keep value between renders. Dont forget to use \"current\"\n  var [canvasWidthHeight, setCanvasWidthHeight] = useState(0)\n  \n  useEffect(() => { // [] empty: run only once when component mounts like componentDidMount\n      componentDidMountX(); // setup event listeners\n      // set up these state things. If not in state, they're forgotten on every refresh...\n      // BUT why is it getting 'set' twice? Once for current screen and again for after refresh.\n      thisReactNode = thisReactNodeRef.current;\n      setThisReactNode(thisReactNode);\n      // setCanvasA(canvasA_REF.current)\n      canvasA.current = canvasA_REF.current;\n      var borderWidth = parseFloat(thisReactNode.parentNode.style.borderWidth); // \"4px -> 4\"\n      canvasWidthHeight = thisReactNode.clientWidth - borderWidth * 2; // offsetWidth  .clientWidth; \n      setCanvasWidthHeight(canvasWidthHeight); \n    }, []);\n\n  useEffect(() => {  // gets called when redrawing if mouseX_st or mouseY_st changes\n    // console.log('yyyy ' + mouseX_st)\n  }, [mouseX_st, mouseY_st]);\n\n  useEffect(() => {  // runs every time\n    drawCanvas();\n  });\n\n  // one-time setup of event listeners\n  function componentDidMountX() { // from class component componentDidMount()\n    thisReactNode = thisReactNodeRef.current;\n    console.log('thisReactNode ' + thisReactNode);\n    canvasA.current = canvasA_REF.current;\n    console.log('...canvasA ' + canvasA);\n    // componentDidMountX();\n    window.addEventListener(\"mousemove\", (mevent) =>  { doMoveTouchOrMouse(\n      mevent, thisReactNode, mevent.clientX, mevent.clientY);});\n    thisReactNode.addEventListener(\"mousedown\", (mouseEvt) =>  { \n        freezeScroll(true); isDragging=true; }); \n    window.addEventListener(\"mouseup\", (mouseEvt) =>  { \n        freezeScroll(false); isDragging=false; }); \n        /*\n    thisReactNode.addEventListener(\"touchstart\", (mouseEvt) => { \n        freezeScroll(true); this.isDragging=true; }); \n    // touchend or mouseup is for window in case it happens outside of component\n    this.thisReactNode.addEventListener(\"touchend\", (mouseEvt) =>   { \n        this.freezeScroll(false); this.isDragging=false; });\n    window.addEventListener(\"touchmove\", (mevent) =>  { this.doMoveTouchOrMouse(\n        mevent, this.thisReactNode, mevent.touches[0].clientX, mevent.touches[0].clientY);});\n        */\n    window.addEventListener('resize', () =>  { \n      window.location.reload(); \n    });\n  }\n\n \n  // TODO dimensions change a bit when scrollbar gets hidden and looks bad\n  // This prevents screen from squishing around while knob is turned.\n  function freezeScroll(trueOnfalseOff) { if (trueOnfalseOff)  document.body.style.overflow = \"hidden\"; \n    else document.body.style.overflow = \"auto\";  }\n\n  function doMoveTouchOrMouse(evt, theNode, x, y) {\n    // console.log(isDragging)\n    if (!isDragging) return;\n    evt.preventDefault(); // prevents screen from scrolling and messing up knob turn\n    // shift frame of reference to the active node instead of screen\n    var mouseX = x - theNode.offsetLeft;\n    // y is lower at top and increases down. If window is scrolled, messes up Y coord, so compensate with scrollY.\n    var mouseY = canvasWidthHeight - (y - theNode.offsetTop) - window.scrollY; \n    console.log('bb ' + canvasWidthHeight)\n    mouseY = mouseY.toFixed(0)\n    setmouseX_st(mouseX); setMouseY_st(mouseY); // cause a REDRAW!\n    var delta = Math.abs(Math.abs(mouseX) - Math.abs(lastX)) +  Math.abs(Math.abs(mouseY) - Math.abs(lastY))\n    // reduce load on client by not responding to every move\n    // if (lastX !== 12345 && delta < MOUSEMOVETHRESHOLD) { return; }\n    lastX = mouseX;  lastY =  mouseY;\n    return true;\n  }\n\n  function drawCanvas() {\n    canvasA.current.width = canvasA.current.height = canvasWidthHeight;\n    const drawContextA = canvasA.current.getContext('2d');\n    drawContextA.clearRect(0, 0, canvasA.current.width, canvasA.current.height);\n    const center = canvasWidthHeight / 2; \n    const lineWidth = props.lineWidthPct / 100 * canvasWidthHeight;\n    const radius = center - (lineWidth / 2);\n    drawContextA.lineWidth = lineWidth;\n    \n    // draw the line\n    // var dx = this.mouseX - center; \n    // var dy = this.mouseY - center;\n    // this.angle = Math.atan(dy/dx);\n    // console.log('dy ' + dy + ' dx ' + dx + ' angle ' + this.angle)\n    // // geometry has angle starting at 3:00 going up toward 12 counterclockwise. Change to where TopDeadCenter is 0 and clockwise increases.\n    // this.knobAngle =  - this.angle; // -this.angle; // degsToRadians(-90) - this.angle + Math.PI/2;\n    \n    var dx = mouseX_st - center; \n    var dy = mouseY_st - center;\n    var graphicsAngle = Math.atan(dy/dx);\n    if (dx < 1.0) graphicsAngle -= Math.PI;\n    //console.log('dy ' + dy + ' dx ' + dx + ' graphicsAngle ' + this.graphicsAngle)\n    // geometry has angle starting at 3:00 going up toward 12 counterclockwise. Change to where TopDeadCenter is 0 and clockwise increases.\n    knobAngle =  Math.PI/2 - graphicsAngle; // -this.angle; // degsToRadians(-90) - this.angle + Math.PI/2;\n    \n    // this.angle = radiansToDeg(this.angle).toFixed(0)\n    //drawContextA.lineWidth = 22;\n    drawContextA.strokeStyle =  '#ff0000';\n    drawContextA.beginPath();\n    drawContextA.moveTo(center, center);\n    // normalize line length to radius\n    var ratio = radius/Math.pow(Math.pow(dx, 2) + Math.pow(dy, 2),  0.5);\n    drawContextA.lineTo(center + dx * ratio, center - dy * ratio); // Y is upside down, so subtract!\n    drawContextA.stroke();\n    // now the melon slice \n    const color = '#00ff00';\n    drawContextA.strokeStyle = color;\n    drawContextA.beginPath();\n    // arc() geometry has graphicsAngle starting  at 3:00 going up toward 12 counterclockwise.\n    var topDeadCenter = -Math.PI/2;\n    drawContextA.arc(center, center, radius, topDeadCenter, -graphicsAngle);\n    drawContextA.stroke();\n  }\n\n  function renderX() { // ported from class component render()\n     // gridTemplateColumns: 'auto 1fr' .. [first col auto width, second uses remainder]\n     // also repeat(2, 1fr) [2 cols each uses 1 unit] .... repeat(2, auto) [2 cols each auto-width]\n     // note: this component sizes itself based on its parents width and border-width\n    console.log('canvasWidthHeight ' + canvasWidthHeight)\n    return (\n      <div ref={thisReactNodeRef} id='knobTop' style={{ border: '0 solid aqua'}}>\n       <div id='mouseMoveID' \n         style={{ position:'absolute', border: '0 solid green',\n                  display: 'grid', gridTemplateColumns: 'repeat(2, auto)'}}  >\n\t\t\t   <div>val: </div><div>{11}</div>\n         <div>X: </div><div>{mouseX_st}</div>\n         <div>Y: </div><div>{mouseY_st}</div>\n         <div>angle: </div><div>{'geom: ' + graphicsAngle.toFixed(2) + ' knobAngle: ' + knobAngle.toFixed(2) }</div>\n\t\t\t</div>\n      <canvas id='knobCanvas' ref={canvasA_REF}\n        height={canvasWidthHeight}\n        width={canvasWidthHeight}\n      />\n      </div>\n    );\n  }\n  return renderX();\n}\n\nclass TestReactKnobInGrid extends React.Component {\n  render() {\n    return (\n    <div style={{ width:'50%', border: '4px solid blue', display:'grid',  gridTemplateColumns: 'repeat(2, 1fr)'}}  >\n      <div style={{fontSize: '1.2em', gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} \n            onClick={() => { window.location.reload();}}>reload { LABEL }</div>\n        <div  id='bigTopOne' style={{ gridColumn: '1/3', border: '4px solid red '}}>\n          <div style={{border: '4px solid green', width: '40%'}} ><ReactKnob lineWidthPct={10} /></div>\n        </div>\n        {/* */}\n        <div id='AAb' style={{border: '4px solid red '}}>\n          <ReactKnob lineWidthPct={10} /></div>\n        <div id='BB' style={{border: '8px solid red'}}>\n          <ReactKnob lineWidthPct={10} /></div> \n        <div style={{gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} >\n          NOTE: ReactKnob is always SQUARE and assumes the WIDTH given to it by the\n          parent element, in this case a grid div.\n        </div>\n      </div>\n    )\n   }\n}\n\n// ---------- END snip to copy into react code -----------------------\nexport { ReactKnob, LABEL, TestReactKnobInGrid };\n// offsetHeight\n/*\nReactDOM.render(\n  <div style={{ width:'50%', border: '4px solid blue', display:'grid',  gridTemplateColumns: 'repeat(2, 1fr)'}} >\n    <div style={{fontSize: '1.2em', gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} \n        onClick={() => { window.location.reload();}}>reload { LABEL }</div>\n    <div  id='bigTopOne' style={{ gridColumn: '1/3', border: '4px solid red '}}>\n        <ReactKnob lineWidthPct={22} /></div>\n{/  * *  /}<div id='AA' style={{border: '4px solid red '}}>\n        <ReactKnob lineWidthPct={22} /></div>\n    <div id='BB' style={{border: '8px solid red'}}>\n       <ReactKnob lineWidthPct={44} /></div> \n    <div style={{gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} >\n      NOTE: ReactKnob is always SQUARE and assumes the WIDTH given to it by the\n        parent element, in this case a grid div.</div>\n  </div>\n  ,\n  document.getElementById('app')\n);\n*/\n/*\nclass RReactKnob extends React.Component {\n   render() { \n       //var thisReactNode = ReactDOM.findDOMNode(this);\n       console.log('clientWidth: ' + this.thisWidth)\n       return(<div id='knobTop' \n              style={{ border: '11px solid aqua'}}>\n         RReacKnob<br/>and more</div>)\n   }\n   componentDidMount() {\n        var thisReactNode = ReactDOM.findDOMNode(this);\n        this.thisHeight = thisReactNode.parentElement.clientHeight;\n        this.thisWidth = thisReactNode.parentElement.clientWidth;\n        //notoffsetHeight\n        //this.clientHeight = this.clientWidth;\n        console.log('ht ' + this.thisHeight + ' wid ' + this.thisWidth)\n  }\n}\n*/\n/**\nCODEPEN NOTES:\nTHIS IS WRITTEN FOR CODEPEN. CODEPEN DOESNT USE PACKAGE.JSON,\nwhich would normally have these entries:\n\"react\": \"^17.0.1\",\n\"react-dom\": \"^17.0.1\",\nINSTEAD DO THIS IN CODEPEN: \nmethod 1: SETTINGS->js->ADD EXTERNAL SCRIPTS/PENS\n  https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.min.js\n  AND https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.min.js\nmethod 2: SETTINGS->js->ADD PACKAGES\n  search for \"react\" and when you click it it adds the import entry \n  at top of this file. Repeat for react-dom.\nWhen you port this code to visual studio code, put abovve entries in package.json\nand add these imports to code:\nimport React from 'react';\n?????  import React, { React-dom } from 'react';\ncodepen HTML:    <div id='app'></div>\ncodepen css: blank\nDEBUGGING:\nSAVE project, then click on blocky thing upper right->debug\n- a new window pops up; use chrome debugger to view console, source, breakpoints etc\n- to get to source, put a console.log('abc') somewhere and on console the source file with weird long name is on right. Click on it and you will see your own code.\n- Beware if script fails this screen will be blank until you look at the console.\n- You can't debug main screen because it has all the codepen stuff.\n**/\n //var deltaDistSquared = Math.pow(Math.abs(this.state.mouseX_st) - Math.abs(this.state.lastX), 2) + \n    //                       Math.pow(Math.abs(this.state.mouseY) - Math.abs(this.state.lastY), 2)\n","import React from 'react';\nimport * as ReactDOM from 'react-dom'; \n//import { TestReactKnobInGrid } from './ReactKnob.js';\nimport { TestReactKnobInGrid } from './ReactKnobFn.js';\nimport {  BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass RouterForMultiPages extends React.Component {\n  render() {\n    return(<Router>\n      <main>\n      <div>\n          {/* set up routes to .js pages */}\n          <Route path=\"/TestReactKnobInGrid_url\">\n            <TestReactKnobInGrid /> \n          </Route>\n          <nav>\n            <br/><Link to=\"/TestReactKnobInGrid_url\">TestReactKnobInGrid</Link>\n          </nav> \n          </div>\n      </main>\n    </Router>);\n  }\n}\n\nfunction ShowLoc() {\n  return(\n  <div style={{ fontSize:'0.5em', backgroundColor:\"#ffff00\", width:'fit-content' }} \n  onMouseEnter={(event) => {\n    event.currentTarget.style.fontSize='150%'}} \n  onMouseLeave={(event) => {event.currentTarget.style.fontSize='0.5em'}}\n  >\n    tues....this div is from containerSetups/frontend/react/componentDev/src/index.js\n  </div>\n  )\n}\n\n/*\nonMouseEnter={(event) => {event.currentTarget.style.fontSize='150%'}} \n               onMouseLeave={(event) => {event.currentTarget.style.fontSize='0.5em'}}\nonMouseEnter={this.style.fontSize='150%'} onMouseLeave={this.style.fontSize='0.5em'} >\n               */\n  ReactDOM.render(<div>\n  <ShowLoc/>\n    <RouterForMultiPages  /></div>\n    ,\n    document.getElementById('22root_div_which_gets_populated_by_indexjs')\n  );\n  \n"],"sourceRoot":""}