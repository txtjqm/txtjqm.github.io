{"version":3,"sources":["ReactKnobFn.js","index.js"],"names":["ReactKnob","props","geomAngle","useRef","knobAngle","useState","mouseX_st","setmouseX_st","mouseY_st","setMouseY_st","lastX","lastY","isDragging","thisReactNode","canvasA","canvasWidthHeight","displayA","componentDidMountX","useCallback","window","addEventListener","mevent","evt","theNode","x","y","current","preventDefault","mouseX","offsetLeft","mouseY","offsetTop","scrollY","toFixed","Math","abs","doMoveTouchOrMouse","clientX","clientY","mouseEvt","freezeScroll","touches","location","reload","trueOnfalseOff","document","body","style","overflow","DisplayA","display","topOffst","id","ref","top","position","height","border","gridTemplateColumns","msg","useEffect","borderWidth","parseFloat","parentNode","clientWidth","useLayoutEffect","width","drawContextA","getContext","clearRect","center","lineWidth","lineWidthPct","radius","dx","dy","atan","PI","knobCallback","strokeStyle","beginPath","moveTo","ratio","pow","lineTo","stroke","topDeadCenter","arc","drawCanvas","console","log","knobCallbackA","newVal","TestReactKnobInGrid","fontSize","gridColumn","textAlign","paddingRight","onClick","RouterForMultiPages","path","to","React","Component","ShowLoc","backgroundColor","onMouseEnter","event","currentTarget","onMouseLeave","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f9db4a1e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect, useCallback } from 'react';\n// this is only for class components....   import * as ReactDOM from 'react-dom'; \n\n// ---------- START snip to copy into react code -----------------------\n// for react project using package.json .....    import React from 'react';\n// for react project using package.json .....    import * as ReactDOM from 'react-dom'; \n// for codepen.io project .... import * as React from \"https://cdn.skypack.dev/react@17.0.1\";\n// for codepen.io project .... import * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n////////////////////////////////////////////////////////////////////\nconst LABEL = \"thur 2\"\nconst MOUSEMOVETHRESHOLD = 10; \n// SEE EXPLANATION AT END HOW  CODEPEN IMPORTS NPM PACKAGES. PACKAGE.JSON IS NOT USED.\nfunction ReactKnob( props ) {\n  const UNINIT_A = 12;\n  var geomAngle = useRef(-1); var knobAngle = useRef(-1);\n  // useState re-renders the control when a var get changed. (queues for rendering, not immediate)\n  var [mouseX_st, setmouseX_st] = useState(-1000); \n  var [mouseY_st, setMouseY_st] = useState(-1000);\n  var lastX=UNINIT_A; var lastY=0; \n  var isDragging = useRef(false); \n  const thisReactNode = useRef();\n  var canvasA = useRef(); // useRef let it keep value between renders. Dont forget to use \"current\"\n  var canvasWidthHeight = useRef(UNINIT_A);\n  var displayA = useRef();\n  // const [state, dispatch] = useReducer(reducer, initialArg, init);\n\n  /* React function component has advantage over class component because it lets you access dom \n   * components easily [search for \"thisReactNode\" to see how it works]\n   * There are 3 'hook functions' used here for react function components:\n   *    useState(), useRef() and useEffect. I'm sure these names mean lots to the designers but they dont say much to me.\n   * Below is how they are used in this project, but are not complete descriptions:\n   * 1. \"useEffect\" is the main lifecycle method of function components. \n   *   It invokes custom code when component renders, conditionally according to second array arg:\n   *   + missing: run every time. Good for getting dimensions of window etc\n   *   + [] empty: run only once when component mounts like componentDidMount\n   *   + [aa, bb]: do only when aa or bb changes\n   *   + [] empty and returns function: runs when component unmounts\n   * 2. \"useState\" sets up a variable which perists between renders and queues a render when its value is changed.\n   * 3. \"useRef\" lets you name a dom element and reference it in the code.\n   */\n  // one-time setup of event listeners\n  const componentDidMountX = useCallback(() => {  // to avoid error when calling from useEffect()\n    // function componentDidMountX() { // from class component componentDidMount()\n    window.addEventListener(\"mousemove\", (mevent) =>  { doMoveTouchOrMouse(\n      mevent, thisReactNode.current, mevent.clientX, mevent.clientY);});\n    thisReactNode.current.addEventListener(\"mousedown\", (mouseEvt) =>  { \n        freezeScroll(true); isDragging.current=true; }); \n    window.addEventListener(\"mouseup\", (mouseEvt) =>  { \n        freezeScroll(false); isDragging.current=false; }); \n        \n    thisReactNode.current.addEventListener(\"touchstart\", (mouseEvt) => { \n        freezeScroll(true); isDragging.current=true; }); \n    // touchend or mouseup is for window in case it happens outside of component\n    thisReactNode.current.addEventListener(\"touchend\", (mouseEvt) =>   { \n        this.freezeScroll(false); isDragging.current=false; });\n\n    window.addEventListener(\"touchmove\", (mevent) =>  { this.doMoveTouchOrMouse(\n        mevent, thisReactNode.current, mevent.touches[0].clientX, mevent.touches[0].clientY);});\n        \n    window.addEventListener('resize', () =>  { \n      window.location.reload(); \n    });\n  }, [])\n\n  useEffect(() => { // [] empty: run only once when component mounts like componentDidMount\n      componentDidMountX(); // setup event listeners\n      var borderWidth = parseFloat(thisReactNode.current.parentNode.style.borderWidth); // \"4px -> 4\"\n      canvasWidthHeight.current = thisReactNode.current.parentNode.clientWidth - borderWidth * 2; // offsetWidth  .clientWidth; \n    }, [componentDidMountX]);\n\n  useLayoutEffect(() => { // [] empty: run only once when component mounts like componentDidMount\n    // console.log('useLayoutEffect')\n    }, []);\n\n  useEffect(() => {  // gets called when redrawing if mouseX_st or mouseY_st changes\n    // console.log('yyyy ' + mouseX_st)\n  }, [mouseX_st, mouseY_st]);\n\n  useEffect(() => {  // runs every time. Draws the stuff in canvas according to x,y mouse pos.\n    // the component has been drawn but the canvas has not yet been drawn, so draw it.\n    drawCanvas();\n    //displayA.current.style.display = 'grid';\n    //displayA.current.style.top = (canvasWidthHeight.current * 0.5) + \"px\";\n  });\n\n  useEffect(() => { // [] empty and returns function: component unmounted\n    return (() => { console.log('component unmounted') })\n  }, []);\n\n  \n \n  // TODO dimensions change a bit when scrollbar gets hidden and looks bad\n  // This prevents screen from squishing around while knob is turned.\n  function freezeScroll(trueOnfalseOff) { if (trueOnfalseOff)  document.body.style.overflow = \"hidden\"; \n    else document.body.style.overflow = \"auto\";  }\n\n  function doMoveTouchOrMouse(evt, theNode, x, y) {\n    // console.log(isDragging)\n    if (!isDragging.current) return;\n    evt.preventDefault(); // prevents screen from scrolling and messing up knob turn\n    // shift frame of reference to the active node instead of screen\n    var mouseX = x - theNode.offsetLeft;\n    // y is lower at top and increases down. If window is scrolled, messes up Y coord, so compensate with scrollY.\n    var mouseY = canvasWidthHeight.current - (y - theNode.offsetTop) - window.scrollY; \n    mouseY = mouseY.toFixed(0)\n    setmouseX_st(mouseX); setMouseY_st(mouseY); // cause a REDRAW!\n    var delta = Math.abs(Math.abs(mouseX) - Math.abs(lastX)) +  Math.abs(Math.abs(mouseY) - Math.abs(lastY))\n    // reduce load on client by not responding to every move\n    // if (lastX !== UNINIT_A5 && delta < MOUSEMOVETHRESHOLD) { return; }\n    lastX = mouseX;  lastY =  mouseY;\n    return true;\n  }\n\n  function drawCanvas() {\n    canvasA.current.width = canvasA.current.height = canvasWidthHeight.current;\n    const drawContextA = canvasA.current.getContext('2d');\n    drawContextA.clearRect(0, 0, canvasA.current.width, canvasA.current.height);\n    const center = canvasWidthHeight.current / 2; \n    const lineWidth = props.lineWidthPct / 100 * canvasWidthHeight.current;\n    const radius = center - (lineWidth / 2);\n    drawContextA.lineWidth = lineWidth;\n    var zzx = (mouseX_st == -1000) ? center : mouseX_st;\n    var zzy = (mouseY_st == -1000) ? center + 100 : mouseY_st;\n    var dx = zzx - center; \n    var dy = zzy - center;\n    geomAngle.current = Math.atan(dy/dx);\n    if (dx < 0.0) geomAngle.current -= Math.PI;\n    // geometry has angle starting at 3:00 going up toward 12 counterclockwise. Change to where TopDeadCenter is 0 and clockwise increases.\n    knobAngle.current =  Math.PI/2 - geomAngle.current; // -this.angle; // degsToRadians(-90) - this.angle + Math.PI/2;\n    // knobAngle.current = toDegClock(knobAngle.current);\n    if (knobAngle.current == 360) knobAngle.current = 0;\n    //if (Math.PI -geomAngle < ) knobAngle.current = 0;\n    props.knobCallback(knobAngle.current)\n    // this.angle = radiansToDeg(this.angle).toFixed(0)\n    //drawContextA.lineWidth = 22;\n    drawContextA.strokeStyle =  '#ff0000';\n    drawContextA.beginPath();\n    drawContextA.moveTo(center, center);\n    // normalize line length to radius\n    var ratio = radius/Math.pow(Math.pow(dx, 2) + Math.pow(dy, 2),  0.5);\n    drawContextA.lineTo(center + dx * ratio, center - dy * ratio); // Y is upside down, so subtract!\n    drawContextA.stroke();\n    // now the melon slice \n    drawContextA.strokeStyle = '#00ff00';\n    drawContextA.beginPath();\n    // arc() geometry has geomAngle.current starting  at 3:00 going up toward 12 counterclockwise.\n    var topDeadCenter = -Math.PI/2;\n    drawContextA.arc(center, center, radius, topDeadCenter, -geomAngle.current);\n    drawContextA.stroke();\n    // outer ring\n    drawContextA.lineWidth = 4;\n    drawContextA.strokeStyle = '#777777';\n    drawContextA.beginPath();\n    drawContextA.arc(center, center, radius, 0, -Math.PI * 2);\n    drawContextA.stroke();\n  }\n\n  function MouseInfo(props) {\n     return (<div id='mouseMoveID' \n         style={{ position:'relative', display:'none', border: '0 solid green',\n                  display: 'grid', gridTemplateColumns: 'repeat(2, auto)'}}  >\n\t\t\t   <div>val: </div><div>{props.msg} {11}</div>\n         <div>X: </div><div>{mouseX_st}</div>\n         <div>Y: </div><div>{mouseY_st}</div>\n         <div>angle: </div><div>{'geomAngle.: ' + toDegClock(geomAngle.current) + ' knobAngle: ' + toDegClock(knobAngle.current) }</div>\n\t\t\t</div>)\n  }\n\n  function DisplayA(props) {\n    // console.log('vv ' + canvasWidthHeight.current)\n    if (canvasWidthHeight.current == UNINIT_A) return (<div style={{ display:'none' }}/>)\n    var topOffst = (canvasWidthHeight.current / 4) + 'px';\n    return (\n      <div id='DisplayA'  ref={displayA} \n           // note.. position:'relative' still takes space at top, so set height to 0 px\n           style={{ top:topOffst , position:'relative', height:'0px',\n                    border: '1` solid blue', gridTemplateColumns: 'repeat(2, auto)'}}  >\n        <div>msg: </div><div>{props.msg} {11}</div>\n      </div>)\n }\n\n  function renderX() { // ported from class component render()\n     // gridTemplateColumns: 'auto 1fr' .. [first col auto width, second uses remainder]\n     // also repeat(2, 1fr) [2 cols each uses 1 unit] .... repeat(2, auto) [2 cols each auto-width]\n     // note: this component sizes itself based on its parents width and border-width\n    return (\n      <div ref={thisReactNode} id='knobTop' style={{ border: '2px solid aqua'}}>\n        {/* <MouseInfo msg=\"mouseinfo\"/> */}\n        <DisplayA msg=\"mouseinfo\"/>\n        <canvas id='knobCanvas' ref={canvasA}\n          height={canvasWidthHeight.current}\n          width={canvasWidthHeight.current}\n        />\n      </div>\n    );\n  }\n  return renderX();\n}\n\nfunction toDegClock(rads) {\n   return ((rads / (2 * Math.PI)) * 360 ).toFixed(0)\n}\n\nfunction knobCallbackA(newVal) {\n   //console.log('knobCallbackA: ' + newVal)\n}\n\nfunction TestReactKnobInGrid() {\n  useEffect(() => { // [] empty: run only once when component mounts like componentDidMount\n     // nothing to do  \n  }, []);\n  return (\n    <div style={{ width:'30%', border: '0px solid orange', display:'grid',  gridTemplateColumns: 'repeat(2, 1fr)'}}  >\n      <div style={{fontSize: '1.2em', gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} \n            onClick={() => { window.location.reload();}}>reload { LABEL }</div>\n        <div  id='bigTopOne' style={{ gridColumn: '1/3', border: '1px solid red '}}>\n          <div style={{border: '1px solid #777777', width: '40%'}} >\n            <ReactKnob lineWidthPct={10} knobCallback={knobCallbackA}/></div>\n        </div>\n        {/* */}\n        <div id='AAb' style={{border: '1px solid red '}}>\n          <ReactKnob lineWidthPct={10}  knobCallback={knobCallbackA}/></div>\n        <div id='BB' style={{border: '1px solid red'}}>\n          <ReactKnob lineWidthPct={10}  knobCallback={knobCallbackA}/></div> \n        <div style={{gridColumn: '1/3', textAlign: 'center', paddingRight: '10%'}} >\n          NOTE: ReactKnob is always SQUARE and assumes the WIDTH given to it by the\n          parent element, in this case a grid div.\n        </div>\n      </div>\n  )\n}\n\n// ---------- END snip to copy into react code -----------------------\nexport { ReactKnob, LABEL, TestReactKnobInGrid };\n\n/**\nCODEPEN NOTES:\nTHIS IS WRITTEN FOR CODEPEN. CODEPEN DOESNT USE PACKAGE.JSON,\nwhich would normally have these entries:\n\"react\": \"^17.0.1\",\n\"react-dom\": \"^17.0.1\",\nINSTEAD DO THIS IN CODEPEN: \nmethod 1: SETTINGS->js->ADD EXTERNAL SCRIPTS/PENS\n  https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.min.js\n  AND https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.min.js\nmethod 2: SETTINGS->js->ADD PACKAGES\n  search for \"react\" and when you click it it adds the import entry \n  at top of this file. Repeat for react-dom.\nWhen you port this code to visual studio code, put abovve entries in package.json\nand add these imports to code:\nimport React from 'react';\n?????  import React, { React-dom } from 'react';\ncodepen HTML:    <div id='app'></div>\ncodepen css: blank\nDEBUGGING:\nSAVE project, then click on blocky thing upper right->debug\n- a new window pops up; use chrome debugger to view console, source, breakpoints etc\n- to get to source, put a console.log('abc') somewhere and on console the source file with weird long name is on right. Click on it and you will see your own code.\n- Beware if script fails this screen will be blank until you look at the console.\n- You can't debug main screen because it has all the codepen stuff.\n**/\n //var deltaDistSquared = Math.pow(Math.abs(this.state.mouseX_st) - Math.abs(this.state.lastX), 2) + \n    //                       Math.pow(Math.abs(this.state.mouseY) - Math.abs(this.state.lastY), 2)\n","import React from 'react';\nimport * as ReactDOM from 'react-dom'; \n// import { TestReactKnobInGrid } from './ReactKnobClass.js';\nimport { TestReactKnobInGrid } from './ReactKnobFn.js';\nimport {  BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass RouterForMultiPages extends React.Component {\n  render() {\n    return(<Router>\n      <main>\n      <div>\n          {/* set up routes to .js pages */}\n          <Route path=\"/TestReactKnobInGrid_url\">\n            <TestReactKnobInGrid /> \n          </Route>\n          <nav>\n            <br/><Link to=\"/TestReactKnobInGrid_url\">TestReactKnobInGrid</Link>\n          </nav> \n          </div>\n      </main>\n    </Router>);\n  }\n}\n\nfunction ShowLoc() {\n  return(\n  <div style={{ fontSize:'0.5em', backgroundColor:\"#ffff00\", width:'fit-content' }} \n  onMouseEnter={(event) => {\n    event.currentTarget.style.fontSize='150%'}} \n  onMouseLeave={(event) => {event.currentTarget.style.fontSize='0.5em'}}\n  >\n    tues....this div is from containerSetups/frontend/react/componentDev/src/index.js\n  </div>\n  )\n}\n\n/*\nonMouseEnter={(event) => {event.currentTarget.style.fontSize='150%'}} \n               onMouseLeave={(event) => {event.currentTarget.style.fontSize='0.5em'}}\nonMouseEnter={this.style.fontSize='150%'} onMouseLeave={this.style.fontSize='0.5em'} >\n               */\n  ReactDOM.render(<div>\n  <ShowLoc/>\n    <RouterForMultiPages  /></div>\n    ,\n    document.getElementById('22root_div_which_gets_populated_by_indexjs')\n  );\n  \n"],"sourceRoot":""}